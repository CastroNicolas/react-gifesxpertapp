{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGrifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAqBrC,OACI,8BACI,sBAAMC,SAfM,SAACC,GAClBA,EAAEC,iBAEFJ,EAAWK,OAAOC,OAAS,IACtBR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAUd,SACA,uBACIO,KAAO,OACPC,MAAST,EACTU,SAvBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCLjBG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATrB,kBAadM,GAbc,4CAAH,sDCDTO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,2CAAf,UACC,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCHAO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAwBtC,OAlBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAd,GAEJe,YAAW,WACPH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAGd,UAGX,CAACpB,IAKGqB,EDtByBK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,mCAAd,SAAkDhB,IAEjDoB,GAAW,mBAAGJ,UAAU,2DAAb,wBAEhB,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEflBgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,gBAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAS9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQS,EAAWe,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCjB/B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.83fa64b9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) =>{\n        setinputValue(e.target.value)\n    }\n\n    const handleSumit = (e) => {\n       e.preventDefault()\n    //console.log('Sumit hecho')\n    if(inputValue.trim().length > 2){\n            setCategories( categories => [inputValue, ...categories])\n            setinputValue('')\n\n        }\n\n\n    }\n\n\n    return (\n        <div>\n            <form onSubmit = {handleSumit}>\n            <input\n                type = 'text'\n                value = {inputValue}\n                onChange = {handleInputChange}\n            \n            ></input>\n            </form>\n        </div>\n    )\n}\nexport default AddCategory\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\nexport  const getGrifs = async(category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=tcQjhr0jH0B0DpNr2mzw5Tr0ETLPwTmL`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n    const gifs = data.map(img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}\n\n","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className='card animate__animated animate__fadeInUp'>\n         <img src={ url } alt={ title } ></img>\n         <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n   const { data: images, loading} = useFetchGifs(category)\n\n   \n    return (\n        <>\n            <h3 className='animate__animated animate__pulse'>{category}</h3>\n\n            {loading && <p className='animate__animated animate__backOutDown animate__delay-3s'>Loading...</p>}\n\n        <div className='card-grid'>\n               {\n                   images.map( img => (\n                      <GifGridItem \n                      key={img.id}\n                      {...img}\n                      />\n                   ))\n               }\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport {getGrifs} from '../helpers/getGifs'\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data:[],\n        loading: true\n    })\n\n    useEffect( () => {  \n        getGrifs(category)\n            .then( img =>{\n               \n               setTimeout(() => {\n                   setstate({\n                       data: img,\n                       loading: false\n                   });\n                   \n               }, 3000);     \n            })\n        \n    }, [category])\n\n\n\n\n    return state\n}\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['Dragon Ball']);\n    \n   //const handleAdd = () => {\n    //   setCategories (categories => [...categories, 'Pokemon'])\n    //}\n   \n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = {setCategories}/>\n            <hr></hr>\n            <ol>\n                {\n                    categories.map( (category) => (\n                        <GifGrid \n                        key = {category}\n                        category = {category}\n                        />\n                        //return <li key = {category} > {category} </li>\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}